<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALX//wD0pAAA7a4TDO6rCj/yqwR386sDiO+rB4Xuqwtr7awQO+2tEw30ogAA471VAAAA
        AAAAAAAAAAAAAO2tEgDrtCgB7qsLN++qBp/uqgeyvK07pZ6vWo/erRtS76wLUO6sDWTtrBBj7a0UK+yt
        GgHtrRYAAAAAAO2tEwDpuUIB7qsIUe6qBcLxqgV2jrFuLga06sEAtOzfB7buQQy05QDtrRMB7a0TF+2t
        FkTsrhou6rIrAeywIQDwqQAA7qsKOu6qBcPuqwhX/7QAAQm27gwJteiaCrbo4wy26LAJtehxFLjpEzmv
        rgDtsR8E7LAgKeuxJxrtrx0A7a0SDu6qBaXuqgd36rQsAtK0PAAApecAC7boZgu26OAPtuivB7TouQm1
        6KAXuecdMbfNAOuzKwTptTQc6Lg/Bu6rCUnvqgW07qwNGu6rCgBExewAAInfAAe16I4HtOiuJ7zpEBS4
        6BgOtuhIGrroEBa46ADkvFIA5btOCuO+Ww3uqwaF7qoGg/GQAABAyf8CKr3nBwy26F4GtOjLCbXofVXG
        7QIfuuoAAAAAAAAAAAAAAAAA4sqBAOLKgQPiy4MK76oGmvGqBF8Auv8SCbXogA626IQItejYDLboaRa4
        6AwAsOcAMb7pAAAAAAAAAAAAAAAAAOfarQDo268A5diqBu+qBpj4qgBTAbbzSAO06fQKtejiDrbo2hm5
        6C4Gs+gA///oAAAAAAAAAAAAAAAAAAAAAADfzZAA3sqGAOHQmwfvqweD8qoFZgC5/xoJteiDDrbocgW0
        6NIItei1DrbpPAy26AAAAAAAAAAAAAAAAAAAAAAA4MBnAOC/ZwPgwWwN7qsKT++qB4vurhkGAN3/ASi8
        5wMQt+g0BrTowwi16IoAluYAE7joFg+36EYduugQGLnoAOW3QwDmtkAK5LhJEO6sDxLvqwiU7qwKNu6q
        BgA9wukAAIzmAAi16H4KtejUELfohwe06LEJteinF7joHiy20QDrsSUD6bItHeezMwjvqAAA7qsLQu6r
        CY/urRAYya40AEHC5gEPt+hiD7fo2wy26MoJteiQEbfoGxqvyADvrxoB6q8gI+qwJBvvrRQA7qwRAO2u
        GwLuqwtY7qsKhvSrCCYat+MOBLXrtgK06v4ItuttAMT/A5CtXQDsrxgK7K4YM+uuHC3qsCEC668eAAAA
        AADsrhYA6rMoAu6sDEDvqwuC6awRZmiykH41s76TdbKEOPutBh/trRM97a0UT+ytFizsryED7K4cAAAA
        AAAAAAAAAAAAAOqzKADG//8A7a0RE+6sDUn0qwVu9q0IdfGtDnDtrBBk7a0TPe2tFRLptT8A7K8hAAAA
        AAAAAAAA8A8AAMADAACAQQAAgBEAAAwIAAAcDAAAIHwAAAD+AAAB/gAAAPwAAACMAAAcCAAAiBEAAIAh
        AADAAwAA8A8AAA==
</value>
  </data>
</root>